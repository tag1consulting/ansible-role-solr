---
# Zookeeper
zk_version: 3.6.1

zk_tar_dir: /opt/src
zk_dir: "/opt/zookeeper-{{ zk_version }}"
zk_data_dir: /var/lib/zookeeper
zk_log_dir: /var/log/zookeeper

zk_mirrors:
  - "https://apache.osuosl.org/zookeeper/"
  - "https://archive.apache.org/dist/zookeeper/"

zk_checksum: ""
zk_checksum_algo: ""
zk_remote_path: ""

zk_dependencies:
  - libselinux-python

zk_user: zookeeper
zk_deploy: true
zk_reconfigure: false

zk_conf_params:
  tickTime: 2000
  initLimit: 10
  syncLimit: 5
  dataDir: "{{ zk_data_dir }}"
  snapCount: 10000
  leaderServes: yes
  autopurge.snapRetainCount: 3
  autopurge.purgeInterval: 0
  4lw.commands.whitelist: "stat, ruok, conf, isro, wchc, mntr"
  reconfigEnabled: true
  dynamicConfigFile: "{{ zk_dir }}/conf/zoo.cfg.dynamic"

zk_systemd_params:
  unit:
    Description: "Zookeeper"
    After: network.target
    Wants: network.target
  service:
    Type: simple
    User: "{{ zk_user }}"
    Group: "{{ zk_user }}"
    ExecStart: "/opt/zookeeper/bin/zkServer.sh start-foreground"
    Restart: always
    RestartSec: 3
    TimeoutSec: 300
  install:
    WantedBy: multi-user.target

zk_log_params:
  zk:
    root.logger: "INFO,CONSOLE,ROLLINGFILE"
    console.threshold: "INFO"
    log.dir: "/var/log/zookeeper"
    log.file: "zookeeper.log"
    log.threshold: "INFO"
    log.maxfilesize: "256MB"
    log.maxbackupindex: "20"
  log4j:
    rootLogger: "${zookeeper.root.logger}"
    appender.CONSOLE: "org.apache.log4j.ConsoleAppender"
    appender.CONSOLE.Threshold: "${zookeeper.console.threshold}"
    appender.CONSOLE.layout: "org.apache.log4j.PatternLayout"
    appender.CONSOLE.layout.ConversionPattern: "%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n"
    appender.ROLLINGFILE: "org.apache.log4j.RollingFileAppender"
    appender.ROLLINGFILE.Threshold: "${zookeeper.log.threshold}"
    appender.ROLLINGFILE.File: "${zookeeper.log.dir}/${zookeeper.log.file}"
    appender.ROLLINGFILE.MaxFileSize: "${zookeeper.log.maxfilesize}"
    appender.ROLLINGFILE.MaxBackupIndex: "${zookeeper.log.maxbackupindex}"
    appender.ROLLINGFILE.layout: "org.apache.log4j.PatternLayout"
    appender.ROLLINGFILE.layout.ConversionPattern: "%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n"
    appender.TRACEFILE: "org.apache.log4j.FileAppender"
    appender.TRACEFILE.Threshold: "TRACE"
    appender.TRACEFILE.File: "${zookeeper.tracelog.dir}/${zookeeper.tracelog.file}"
    appender.TRACEFILE.layout: "org.apache.log4j.PatternLayout"
    appender.TRACEFILE.layout.ConversionPattern: "%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L][%x] - %m%n"


# Solr
solr_version: "8.6.2"

solr_tar_dir: /opt/src
solr_dir: "/opt/solr-{{ solr_version }}"
solr_data_dir: /var/solr
# TODO Not sure which version they changed the log4j config
solr_log4j_file: "{{ 'log4j.properties' if solr_version is version('8.0.0', '<') else 'log4j2.xml' }}"

solr_mirrors:
  - "https://archive.apache.org/dist/lucene/solr/"
  - "https://apache.osuosl.org/lucene/solr/"

solr_checksum: ""
solr_checksum_algo: ""

solr_dependencies:
  - lsof
  - acl
  - sudo

solr_user: solr
solr_deploy: true

# SOLR_JAVA_MEM calculated based on targets total memory and is more aggressive if there is sufficient swap available.
# This calculation assumes the nodes primary purpose is to host the solr service
solr_params:
  SOLR_HOST: "{% for h in zk_hosts %}{% if h.host is defined %}{% if h.host == inventory_hostname %}{{ h.addr }}{% endif %}{% endif %}{% endfor %}"
  SOLR_JAVA_HOME: /usr/lib/jvm/jre-1.8.0
  SOLR_JAVA_MEM: "{% if ansible_facts['memory_mb']['swap']['total'] > ansible_facts['memory_mb']['real']['total'] %}\
\"-Xms{{ (ansible_facts['memory_mb']['real']['total'] * 8)  // 20 }}m -Xmx{{ (ansible_facts['memory_mb']['real']['total'] * 8)  // 10 }}m\"\
{% else %}\
\"-Xms{{ (ansible_facts['memory_mb']['real']['total'] * 5)  // 20 }}m -Xmx{{ (ansible_facts['memory_mb']['real']['total'] * 5)  // 10 }}m\"\
{% endif %}"
  SOLR_PID_DIR: "{{ solr_data_dir }}"
  SOLR_HOME: "{{ solr_data_dir }}/data"
  LOG4J_PROPS: "{{ solr_data_dir }}/log4j.properties"
  SOLR_LOGS_DIR: "{{ solr_data_dir }}/logs"
  SOLR_PORT: 8983

solr_gc_tune:
  - NewRatio=3
  - SurvivorRatio=4
  - TargetSurvivorRatio=90
  - MaxTenuringThreshold=8
  - +UseConcMarkSweepGC
  - +UseParNewGC
  - ConcGCThreads=4
  - ParallelGCThreads=4
  - +CMSScavengeBeforeRemark
  - PretenureSizeThreshold=64m
  - +UseCMSInitiatingOccupancyOnly
  - CMSInitiatingOccupancyFraction=50
  - CMSMaxAbortablePrecleanTime=6000
  - +CMSParallelRemarkEnabled
  - +ParallelRefProcEnabled

    # solr_port: 8983
solr_opts:
  - "-Xss256k"
  - "-Djetty.host=$SOLR_HOST"

solr_systemd_params:
  unit:
    Description: Apache SOLR
    After: syslog.target network.target remote-fs.target nss-lookup.target
  service:
    PIDFile: "{{ solr_data_dir }}/solr-8983.pid"
    ExecStart: "/opt/solr/bin/solr start -noprompt"
    ExecStop: "/opt/solr/bin/solr stop -noprompt"
    # ExecStatus: "/opt/solr/bin/solr status -noprompt"
    ExecReload: "/bin/kill -s HUP $MAINPID"
    Environment: "SOLR_INCLUDE=/opt/solr/bin/solr.in.sh"
    User: "solr"
    Group: "solr"
    PrivateTmp: "true"
  install:
    WantedBy: multi-user.target
